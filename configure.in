dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/main.c)

PACKAGE=gnuitar

dnl version number
MAJOR_VERSION=0
MINOR_VERSION=3
MICRO_VERSION=2
dnl INTERFACE_AGE=1
dnl BINARY_AGE=1
EXTRA_VERSION=
VERSION=$MAJOR_VERSION.$MINOR_VERSION.$MICRO_VERSION$EXTRA_VERSION

AM_INIT_AUTOMAKE($PACKAGE,$VERSION,no-define)
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")

dnl Specify a header configuration file
dnl AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
#AC_ARG_PROGRAM
AC_PROG_AWK
AC_PROG_LN_S
AC_PROG_CC
AC_PROG_INSTALL

AC_ARG_WITH(gtk2,
    [  --with-gtk2	          Use GTK2 instead GTK (disabled by default)],
    [
	if test "$withval" != "no"; then
	    AM_PATH_GLIB_2_0(2.6.0,
		[
		    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_GLIB2"
		],
		AC_MSG_ERROR(Test for GLIB2 failed. See the file 'INSTALL' for help.),
		gthread)
	    AM_PATH_GTK_2_0(2.0.0,
		[
		    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_GTK2"
		],
		AC_MSG_ERROR(Test for GTK2 failed. See the file 'INSTALL' for help.))
	else
	    AM_PATH_GLIB(1.2.6,
		[
		    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_GLIB"
		],
		AC_MSG_ERROR(Test for GLIB failed. See the file 'INSTALL' for help.),
		gthread)
	    AM_PATH_GTK(1.2.6,
		[
		    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_GTK"
		],
		AC_MSG_ERROR(Test for GTK failed. See the file 'INSTALL' for help.))
	fi
    ],
    [
dnl By default, prefer GTK1 over GTK2, GLIB1 over GLIB2
	AM_PATH_GLIB(1.2.6,
	    [
		CONFIG_DEFS="$CONFIG_DEFS -DHAVE_GLIB"
	    ],
	    [
		AM_PATH_GLIB_2_0(2.6.0,
		    [
			CONFIG_DEFS="$CONFIG_DEFS -DHAVE_GLIB2"
		    ],
		    AC_MSG_ERROR(Test for GLIB2 failed. See the file 'INSTALL' for help.),
		    gthread)
	    ],
	    gthread)
	AM_PATH_GTK(1.2.6,
	    [
		CONFIG_DEFS="$CONFIG_DEFS -DHAVE_GTK"
	    ],
	    [
	        AM_PATH_GTK_2_0(2.0.0,
		    [
			CONFIG_DEFS="$CONFIG_DEFS -DHAVE_GTK2"
		    ],
		    AC_MSG_ERROR(Test for GTK2 failed. See the file 'INSTALL' for help.))
	    ])
    ]
)

AC_ARG_ENABLE(float,
    [  --enable-float          Process in floats rather ints (enabled by default)],
    [
	if test "$enableval" != "no"; then
	    CONFIG_DEFS="$CONFIG_DEFS -DFLOAT_DSP"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UFLOAT_DSP"
	fi
    ],
    [ CONFIG_DEFS="$CONFIG_DEFS -DFLOAT_DSP"]
)

AC_ARG_ENABLE(clip-everywhere,
    [  --enable-clip-everywhere    Clip sound to min/max possible value in every effect (by default only on output)],
    [ CONFIG_DEFS="$CONFIG_DEFS -DCLIP_EVERYWHERE"]
)

AC_ARG_ENABLE(debug,
    [  --enable-debug          Add debug code (disabled by default)],
    [
	if test "$enableval" != "no"; then
	    CONFIG_DEFS="$CONFIG_DEFS -DDEBUG -ggdb"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UDEBUG"
	fi
    ],
    [
	CONFIG_DEFS="$CONFIG_DEFS -UDEBUG"
    ]
)


dnl Replace `main' with a function in -lm:
AC_CHECK_LIB(m, exp)
dnl Replace `main' with a function in -lpthread:
AC_CHECK_LIB(pthread, main)
AC_CHECK_LIB(sndfile, main,
    [ SNDFILE=1 ])
SNDFILE_LIBS=""
AC_ARG_WITH(sndfile,
    [  --with-sndfile	          Use libsndfile to write tracks to .wav ],
    [
    	if test "$withval" != "no" && test "$SNDFILE" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_SNDFILE"
            SNDFILE_LIBS="-lsndfile"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_SNDFILE"
	fi
    ],
    [
	if test "$SNDFILE" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_SNDFILE"
            SNDFILE_LIBS="-lsndfile"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_SNDFILE"
	fi
    ]
)
AC_SUBST(SNDFILE_LIBS)

AC_CHECK_LIB(fftw3f, main,
    [ FFTW3=1 ])
FFTW3_LIBS=""
AC_ARG_WITH(fftw3,
    [  --with-fftw3	          Use libfftw3 for frequency-domain algorithms ],
    [
    	if test "$withval" != "no" && test "$FFTW3" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_FFTW3"
            FFTW3_LIBS="-lfftw3f"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_FFTW3"
	fi
    ],
    [
	if test "$FFTW3" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_FFTW3"
            FFTW3_LIBS="-lfftw3f"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_FFTW3"
	fi
    ]
)
AC_SUBST(FFTW3_LIBS)

# XXX switch to use AM_PATH_ALSA later
AC_CHECK_LIB(asound, main,
    [ ALSA=1 ])

ALSA_LIBS=""
AC_ARG_WITH(alsa,
    [  --with-alsa	          Compile ALSA sound driver (autodetect) ],
    [
    	if test "$withval" != "no" && test "$ALSA" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_ALSA"
            ALSA_LIBS="-lasound"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_ALSA"
	fi
    ],
    [
	if test "$ALSA" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_ALSA"
            ALSA_LIBS="-lasound"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_ALSA"
	fi
    ]
)
AC_SUBST(ALSA_LIBS)


AC_CHECK_LIB(jack, main,
    [ JACK=1 ])

JACK_LIBS=""
AC_ARG_WITH(jack,
    [  --with-jack	          Compile JACK sound driver (autodetect) ],
    [
    	if test "$withval" != "no" && test "$JACK" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_JACK"
            JACK_LIBS="-ljack"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_JACK"
	fi
    ],
    [
	if test "$JACK" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_JACK"
            JACK_LIBS="-ljack"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_JACK"
	fi
    ]
)
AC_SUBST(JACK_LIBS)


OSS=1
AC_ARG_WITH(oss,
    [  --with-oss	          Compile OSS sound driver (on by default) ],
    [
    	if test "$withval" != "no" && test "$OSS" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_OSS"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_OSS"
	fi
    ],
    [
	if test "$OSS" = '1'; then
	    CONFIG_DEFS="$CONFIG_DEFS -DHAVE_OSS"
	else
	    CONFIG_DEFS="$CONFIG_DEFS -UHAVE_OSS"
	fi
    ]
)

dnl used for state
AC_C_VOLATILE
dnl used for some speedups in biquad code
AC_C_INLINE

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_TIME
AC_HEADER_STAT
AC_CHECK_HEADERS(fcntl.h sys/ioctl.h sys/time.h unistd.h sys/stat.h float.h fftw3.h locale.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_CHECK_FUNCS(getcwd isascii memset pow sqrt select strchr strdup strtol)
AC_FUNC_FORK
AC_FUNC_MALLOC
AC_FUNC_STRFTIME
dnl AC_FUNC_SELECT
AC_FUNC_SELECT_ARGTYPES

AC_SUBST(CONFIG_DEFS)

AC_OUTPUT(src/Makefile Makefile)
